var searchIndex = JSON.parse('{\
"bft":{"doc":"Main entry point to our Brainf*ck interpreter.","t":[5],"n":["main"],"q":["bft"],"d":[""],"i":[0],"f":[[[],[[3,[[2,[1]]]]]]],"p":[[8,"Error"],[3,"Box"],[4,"Result"]]},\
"bft_interp":{"doc":"The Virtual Machine that will run our Brainf*ck program.","t":[3,11,11,11,11,11,11,11,11,11,11],"n":["BFVM","borrow","borrow_mut","fmt","from","interpret","into","new","try_from","try_into","type_id"],"q":["bft_interp","","","","","","","","","",""],"d":["Object that contains the internal workings of our Brainf*…","","","","Returns the argument unchanged.","The main interpreter that takes a program and (eventually) …","Calls <code>U::from(self)</code>.","Construct a new VM with clean internal state.","","",""],"i":[0,3,3,3,3,3,3,3,3,3,3],"f":[0,[[]],[[]],[[[3,[[0,[1,2]]]],4],5],[[]],[[[3,[2]],6]],[[]],[[7,8],[[3,[2]]]],[[],9],[[],9],[[],10]],"p":[[8,"Debug"],[8,"Default"],[3,"BFVM"],[3,"Formatter"],[6,"Result"],[3,"BFprogram"],[15,"usize"],[15,"bool"],[4,"Result"],[3,"TypeId"]]},\
"bft_types":{"doc":"Types for a Brainf*ck interpreter.","t":[3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["BFprogram","InputInstruction","as_ref","as_slice","borrow","borrow","borrow_mut","borrow_mut","fmt","fmt","fmt","from","from","from_file","into","into","new","to_string","try_from","try_from","try_into","try_into","type_id","type_id"],"q":["bft_types","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A container to hold an entire Brainf*ck program.","Annotated bytecode instructions for brainf*ck.","","<code>as_slice</code> allows us to access the underlying bytecode …","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Load data from a source file, and parse it into bytecode.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Parse Extended ASCII text into Brainf*ck bytecode. The …","","","","","","",""],"i":[0,0,1,1,2,1,2,1,2,2,1,2,1,1,2,1,1,2,2,1,2,1,2,1],"f":[0,0,[1],[1],[[]],[[]],[[]],[[]],[[2,3],4],[[2,3],4],[[1,3],4],[[]],[[]],[[[6,[5]]],[[8,[1,7]]]],[[]],[[]],[[[6,[5]],[6,[[10,[9]]]]],1],[[],11],[[],8],[[],8],[[],8],[[],8],[[],12],[[],12]],"p":[[3,"BFprogram"],[3,"InputInstruction"],[3,"Formatter"],[6,"Result"],[3,"Path"],[8,"AsRef"],[3,"Error"],[4,"Result"],[15,"u8"],[3,"Vec"],[3,"String"],[3,"TypeId"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
